'number' + 3 + 3 // 'number33' 
// Тому що, якщо є рядок, JavaScript перетворює числа на рядки і склеює їх зліва направо

null + 3 // 3
// null перетворюється на 0, тому 0 + 3 = 3

5 && "qwerty" // "qwerty"
// 5 — true, "qwerty" — теж true, тому оператор && повертає останнє значення "qwerty"

+'40' + +'2' + "hillel"; // "42hillel"
// плюс перед рядком — перетворює рядок на число +'40' -> 40, те саме і з +'2', тому 40 + 2 = 42, 
// число 42 перетворюється в рядок і склеюється з "hillel"

'10' - 5 === 6; // false
// '10' перетворюється на число -> 10 - 5 = 5, а 5 не дорівнює 6, тому false

true + false // 1
// true = 1, а false = 0, тому 1 + 0 = 1

'4px' - 3 // NaN
// '4px' не можна перетворити на число, тому виходить NaN — а будь-яка операція з NaN -> теж NaN

'4' - 3 // 1
// Рядок '4' перетворюється на число 4, тому 4 - 3 = 1

'6' + 3 ** 0; // '61'
// 3 ** 0 = 1, тому що будь-яке число в нульовому степені = 1
// '6' + 1 = '61' (число 1 перетворюється на рядок і склеюється)

12 / '6' // 2
// Рядок '6' перетворюється на число 6, тому 12 / 6 = 2

'10' + (5 === 6); // '10false'
//5 === 6 буде false, далі '10' + false -> '10false' (булеве значення перетворюється на рядок)

null == '' // false
// null не дорівнює порожньому рядку навіть при нестрогому порівнянні (==)

3 ** (9 / 3); // 27
// (9 / 3) = 3, а 3 в степені 3 буде 27

!!'false' == !!'true' // true
// обидва — непорожні рядки, тому !! перетворює їх на true, а true == true , буде true

0 || '0' && 1 // 1
// Спочатку обчислюється '0' && 1 буде 1 (обидва true)
// Потім 0 || 1 буде 1 (бо 0 — false, тому повертає 1)

(+null == false) < 1; // false
// +null -> 0, false -> 0,  буде 0 == 0 тому true
// далі: true < 1 -> 1 < 1 тому false

false && true || true // true
// Спочатку false && true буде false (бо одне з них — false)
// потім false || true буде true (бо одне із них true )

false && (false || true); //false
// Спочатку (false || true) буде true
// Потім false && true буде false (бо одне значення — false)

(+null == false) < 1 ** 5; // false
// +null дорівнює 0, false буде 0, 0 == 0 тому буде true
// 1 ** 5 = 1, а true це 1, тому: 1 < 1 буде false